/*
 * Copyright (c) 2020 The ZMK Contributors
 * Copyright (c) 2022 Innaworks Development Limited, trading as MoErgo
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED BY GLOVE80 LAYOUT EDITOR
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
/* Include all behaviour includes needed by system behaviors/macros */
#include <dt-bindings/zmk/outputs.h>

/* Include behaviour includes needed by key binds - automatically generated */
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define KEYS_L 0 1 2 3 4  10 11 12 13 14 15  22 23 24 25 26 27  34 35 36 37 38 39  \
                          46 47 48 49 50 51  64 65 66 67 68
#define KEYS_R 5 6 7 8 9  16 17 18 19 20 21  28 29 30 31 32 33  40 41 42 43 44 45  \
                          58 59 60 61 62 63  75 76 77 78 79
#define THUMBS 52 53 54  55 56 57   69 70 71  72 73 74

#define QWERTY  0
#define TARMAK  1
#define TARMAK2 2
#define LOWER   3
#define SYM     4
#define NAV     5
#define MAGIC   6

&gresc {
    keep-mods = <(MOD_LSFT|MOD_RSFT)>;
};

/ {
    /*gresc: grave_escape {
        keep-mods = <(MOD_LSFT|MOD_RSFT)>;
    };*/

    /* Glove80 system behavior & macros */
    behaviors {
        // For the "layer" key, it'd nice to be able to use it as either a shift or a toggle.
        // Configure it as a tap dance, so the first tap (or hold) is a &mo and the second tap is a &to
        lower: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "LAYER_TAP_DANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&mo LOWER>, <&to LOWER>;
        };

	hml: homerow_mod_left {
	     compatible = "zmk,behavior-hold-tap";
	     label = "HRM_LEFT";
	     flavor = "balanced";
	     tapping-term-ms = <280>;
	     quick-tap-ms = <175>;
	     global-quick-tap;
	     #binding-cells = <2>;
	     bindings = <&kp>, <&kp>;
	     hold-trigger-key-positions = <KEYS_R THUMBS>;
	     hold-trigger-on-release;
	};

	hmr: homerow_mod_right {
	     compatible = "zmk,behavior-hold-tap";
	     label = "HRM_RIGHT";
	     flavor = "balanced";
	     tapping-term-ms = <280>;
	     quick-tap-ms = <175>;
	     global-quick-tap;
	     #binding-cells = <2>;
	     bindings = <&kp>, <&kp>;
	     hold-trigger-key-positions = <KEYS_L THUMBS>;
	     hold-trigger-on-release;
	};

	just_left: left_no_mods {
	      compatible = "zmk,behavior-mod-morph";
	      label = "JUST_LEFT";
	      #binding-cells = <0>;
	      bindings = <&kp LEFT>, <&kp LEFT>;
	      mods = <(MOD_LSFT|MOD_RSFT|MOD_LCTL|MOD_RCTL|MOD_LALT|MOD_RALT|MOD_LGUI|MOD_RGUI)>;
	      keep-mods = <0>;
	};
	mega: mega_pairs {
 	      compatible = "zmk,behavior-mod-morph";
	      label = "MEGA_PAIRS";
	      #binding-cells = <0>;
	      bindings = <&mega_abrq>, <&parens>;
	      mods = <(MOD_LALT|MOD_RALT)>;
	};
	mega_abrq: mega_abrq {
 	      compatible = "zmk,behavior-mod-morph";
	      label = "MEGA_ABRQ";
	      #binding-cells = <0>;
	      bindings = <&mega_brq>, <&abrackets>;
	      mods = <(MOD_LGUI|MOD_RGUI)>;
	};
	mega_brq: mega_brq {
 	      compatible = "zmk,behavior-mod-morph";
	      label = "MEGA_BRQ";
	      #binding-cells = <0>;
	      bindings = <&braces>, <&mega_quotes>;
	      mods = <(MOD_LCTL|MOD_RCTL)>;
	};
	mega_quotes: mega_quotes {
		 compatible = "zmk,behavior-mod-morph";
		 label = "MEGA_QUOTES";
		 #binding-cells = <0>;
		 bindings = <&dquotes>, <&squotes>;
		 mods = <(MOD_LSFT|MOD_RSFT)>;
	};
    };

    combos {
    	   compatible = "zmk,combos";
	   combo_capsword {
	   		  timeout-ms = <50>;
          		  key-positions = <25 37>;
           		  bindings = <&caps_word>;
			  layers = <QWERTY TARMAK TARMAK2>;
           };
	   combo_capsword2 {
	   		   timeout-ms = <50>;
          		   key-positions = <30 42>;
           		   bindings = <&caps_word>;
			   layers = <QWERTY TARMAK TARMAK2>;
           };
	   combo_home {
	   	      timeout-ms = <50>;
          	      key-positions = <38 39>;
           	      bindings = <&kp HOME>;
           };
	   combo_end {
	   	     timeout-ms = <50>;
          	     key-positions = <40 41>;
           	     bindings = <&kp END>;
           };

    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };

     	mb1:mouse_button1 {
	    label = "MB1";
	    compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
	    bindings = <&macro_press &kp F21>, <&macro_pause_for_release>, <&macro_release &kp F21>;
	};
	mb2:mouse_button2 {
	    label = "MB2";
	    compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
	    bindings = <&macro_press &kp F22>, <&macro_pause_for_release>, <&macro_release &kp F22>;
	};
	mb3:mouse_button3 {
            label = "MB3";
	    compatible = "zmk,behavior-macro";
	    #binding-cells = <0>;
	    bindings = <&macro_press &kp F23>, <&macro_pause_for_release>, <&macro_release &kp F23>;
	};

	pair: pair {
	      label = "PAIR";
	      compatible = "zmk,behavior-macro-two-param";
              #binding-cells = <2>; // Must be 2
	      bindings = <&macro_param_1to1>, <&kp MACRO_PLACEHOLDER>, <&macro_param_2to1>, <&kp MACRO_PLACEHOLDER>, <&just_left>;
	};

	braces: braces {
		label = "BRACES";
		compatible = "zmk,behavior-macro";
		#binding-cells = <0>;
		bindings = <&pair LBKT RBKT>;
	};
	squotes: single_quotes {
		 label = "SQUOTES";
		 compatible = "zmk,behavior-macro";
		 #binding-cells = <0>;
		 bindings = <&pair SQT SQT>;
	};
	dquotes: double_quotes {
		 label = "DQUOTES";
		 compatible = "zmk,behavior-macro";
		 #binding-cells = <0>;
		 bindings = <&pair DQT DQT>;
	};
	abrackets: angle_brackets {
		   label = "ABRACKETS";
		   compatible = "zmk,behavior-macro";
		   #binding-cells = <0>;
		   bindings = <&pair LT GT>;
	};
	parens: parens {
		label = "PARENS";
		compatible = "zmk,behavior-macro";
		#binding-cells = <0>;
		bindings = <&pair LPAR RPAR>;
	};
    };

    magic: magic_hold_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "MAGIC_HOLD_TAP";
        #binding-cells = <2>;
        flavor = "tap-preferred";
        tapping-term-ms = <200>;
        bindings = <&mo>, <&rgb_ug_status_macro>;
    };

    bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_LGUI|MOD_RGUI)>;
        };

    /* Automatically generated keymap */
    keymap {
        compatible = "zmk,keymap";


        layer_Base {
            bindings = <
 &tog TARMAK     &kp F2    &mkp MB2     &mkp MB3     &mkp MB1                                                                                       &kp F6       &kp F7      &kp F8         &kp F9    &kp F10
     &gresc      &kp N1      &kp N2       &kp N3       &kp N4  &kp N5                                                                  &kp N6       &kp N7       &kp N8      &kp N9         &kp N0  &kp EQUAL
    &kp TAB       &kp Q       &kp W        &kp E        &kp R   &kp T                                                                   &kp Y        &kp U        &kp I       &kp O          &kp P   &kp BSLH
  &bspc_del &hml LALT A &hml LGUI S &hml LSHFT D &hml LCTRL F   &kp G                                                                   &kp H &hmr RCTRL J &hmr RSHFT K &hmr RGUI L &hmr RALT SEMI    &kp RET
  &kp MINUS       &kp Z       &kp X    &lt SYM C    &lt NAV V   &kp B    &gresc   &mkp MB3   &mkp MB1      &mkp MB1    &mkp MB3   &mkp MB1   &kp N    &lt SYM M    &kp COMMA     &kp DOT       &kp FSLH    &kp SQT
&magic MAGIC 0 &kp HOME     &kp END     &kp LEFT    &kp RIGHT         &kp SPACE  &kp UNDER   &mkp MB2      &mkp MB2     &kp TAB    &kp RET               &kp UP     &kp DOWN    &kp LBKT       &kp RBKT  &kp PG_DN
            >;
        };

        layer_Tarmak {
            bindings = <
     &trans      &trans      &trans      &trans      &trans                                                                                        &trans      &trans      &trans      &trans      &trans
     &trans      &trans      &trans      &trans      &trans      &trans                                                                &trans      &trans      &trans      &trans      &trans      &trans
     &trans      &trans      &trans       &kp J      &trans      &trans                                                                &trans      &trans      &trans      &trans      &trans      &trans
     &trans      &trans      &trans      &trans      &trans      &trans                                                                 &kp M &hmr RCTRL N &hmr RSHFT E    &trans      &trans      &trans
     &trans      &trans      &trans      &trans      &trans      &trans   &trans    &trans    &trans    &trans    &trans    &trans      &kp K   &lt SYM H      &trans      &trans      &trans      &trans
     &trans      &trans      &trans      &trans      &trans               &trans    &trans    &trans    &trans    &trans    &trans                 &trans      &trans      &trans      &trans      &trans
	    >;
        };

        layer_Tarmak2 {
            bindings = <
     &trans      &trans      &trans      &trans      &trans                                                                                        &trans      &trans      &trans      &trans      &trans
     &trans      &trans      &trans      &trans      &trans      &trans                                                                &trans      &trans      &trans      &trans      &trans      &trans
     &trans      &trans      &trans       &kp F      &trans       &kp B                                                                &trans      &trans      &trans      &trans      &trans      &trans
     &trans      &trans      &trans      &trans &hml LCTRL T     &trans                                                                 &kp M &hmr RCTRL N &hmr RSHFT E    &trans      &trans      &trans
     &trans      &trans      &trans      &trans   &lt NAV J       &kp V   &trans    &trans    &trans    &trans    &trans    &trans      &kp K   &lt SYM H      &trans      &trans      &trans      &trans
     &trans      &trans      &trans      &trans      &trans               &trans    &trans    &trans    &trans    &trans    &trans                 &trans      &trans      &trans      &trans      &trans
	    >;
        };

        layer_Lower {
            bindings = <
 &kp C_BRI_DN  &kp C_BRI_UP      &kp C_PREV      &kp C_NEXT         &kp C_PP                                                                                    &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP            &none  &kp PAUSE_BREAK
       &trans         &none           &none           &none            &none   &kp HOME                                                   &kp LEFT_PARENTHESIS  &kp KP_NUM  &kp KP_EQUAL  &kp KP_SLASH  &kp KP_MULTIPLY  &kp PRINTSCREEN
       &trans         &none           &none    &kp UP_ARROW            &none    &kp END                                                  &kp RIGHT_PARENTHESIS   &kp KP_N7     &kp KP_N8     &kp KP_N9     &kp KP_MINUS   &kp SCROLLLOCK
       &trans         &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PG_UP                                                            &kp PERCENT   &kp KP_N4     &kp KP_N5     &kp KP_N6      &kp KP_PLUS            &none
       &trans     &kp K_APP           &none         &kp F11          &kp F12  &kp PG_DN  &trans  &trans   &to 0  &trans  &trans  &trans              &kp COMMA   &kp KP_N1     &kp KP_N2     &kp KP_N3     &kp KP_ENTER           &trans
   &magic MAGIC 0      &kp CAPS         &kp INS         &kp F11          &kp F12             &trans  &trans  &trans  &trans  &trans  &trans                          &kp KP_N0     &kp KP_N0    &kp KP_DOT     &kp KP_ENTER           &trans
            >;
        };

	layer_Sym {
	    bindings = <
       &none            &none            &none            &none            &none                                                                                     &none            &none            &none            &none            &none
       &none            &none            &none            &none            &none            &none                                                   &none            &none            &none            &none            &none            &none
       &none            &none            &none            &none            &none            &none                                                   &none            &none            &none            &none            &none            &none
       &none     &hml LALT N1     &hml LGUI N2    &hml LSHFT N3    &hml LCTRL N4           &kp N5                                                  &kp N6    &hmr RCTRL N7    &hmr RSHFT N8     &hmr RALT N9     &hmr RALT N0        &kp EQUAL
       &none            &none            &none            &none            &none            &none   &trans  &trans  &trans  &trans  &trans  &trans  &none            &mega            &none            &none            &none            &none
       &none            &none            &none            &none            &none                    &trans  &trans  &trans  &trans  &trans  &trans                   &none            &none            &none
       &none            &none
       >;
};

    layer_Nav {
	    bindings = <
       &none            &none            &none            &none            &none                                                                            &none   &none   &none   &none           &none
       &none            &none            &none            &none            &none            &none                                                   &none   &none   &none   &none   &none           &none
       &none            &none            &none            &none            &none            &none                                                   &none &kp PG_DN &kp PG_UP &kp UP &none          &none
       &none         &kp LALT         &kp LGUI        &kp LSHFT        &kp LCTRL            &none                                                   &none &kp LEFT &kp RIGHT &kp DOWN &kp UP        &none
       &none            &none            &none            &none            &none            &none   &trans  &trans  &trans  &trans  &trans  &trans  &none &kp LC(LEFT) &kp LC(RIGHT) &kp LC(DOWN) &kp LC(UP) &none
       &none            &none            &none            &none            &none                    &trans  &trans  &trans  &trans  &trans  &trans          &none   &none   &none   &none           &none
       >;
};

         layer_Magic {
            bindings = <
  &bt BT_CLR            &none            &none            &none            &none                                                                                  &none   &none   &none   &none  &bt BT_CLR_ALL
       &none            &none            &none            &none            &none            &none                                                         &none   &none   &none   &none   &none           &none
       &none  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                                         &none   &none   &none   &none   &none           &none
 &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                                         &none   &none   &none   &none   &none     &bootloader
      &sys_reset            &none            &none            &none            &none            &none   &bt_2   &bt_3         &none   &none   &none   &none   &none   &none   &none   &none   &none          &sys_reset
       &none            &none            &none            &none            &none                    &bt_0   &bt_1  &out OUT_USB   &none   &none   &none           &none   &none   &none   &none           &none
            >;
        };


    };
};
